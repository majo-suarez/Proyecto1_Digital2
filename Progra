#include <Arduino.h>
#include <driver/ledc.h>

#define ADC_VREF_mV    3300.0 // minivolts
#define ADC_RESOLUTION 4096.0 // Resolución del ADC
#define pinsensor       36 // ESP32 pin GPIO36 (ADC0) conectado a LM35
#define botpin         14 // Pin de boton

#define ledv           23 // Led verde
#define leda           22 // Led amarilla
#define ledr           1 // Led roja

#define ledvChannel 1
#define ledaChannel 2
#define ledrChannel 3
#define freqPWM1 1000
#define freqPWM2 500
#define resolution 8


void setup() {
    pinMode(botpin, INPUT_PULLUP);
    pinMode(ledv, OUTPUT);
    pinMode(leda, OUTPUT);
    pinMode(ledr, OUTPUT);

    configurarPWM();
    int leerbot = digitalRead(botpin);
    bool banderabot = false; 

    Serial.begin(9600);
}

void loop() {

    

    }



void banderabot(void){
  if (leerbot == LOW){
    // Leer valor ADC del sensor de temperatura
    int adcVal = analogRead(pinsensor);
    // Convertir ADC a voltaje minivolts
    float milliVolt = adcVal * (ADC_VREF_mV / ADC_RESOLUTION);
    // Convertir voltaje a temperatura en °C
    float tempC = milliVolt / 10;
    // Convertir de °C a °F
    float tempF = tempC * 9 / 5 + 32;
    // Imprimir en monitor serial
    Serial.print("Temperature: ");
    Serial.print(tempC);   // Imprime temperatura en °C
    Serial.print("°C");
    Serial.print("  ~  "); // Separador entre °C y °F
    Serial.print(tempF);   // Imprime temperatura en °F
    Serial.println("°F");

    delay(500);
}
}


void configurarPWM(void)
{
  ledcSetup(ledvChannel, freqPWM1, resolution);
  ledcSetup(ledaChannel, freqPWM2, resolution);
  ledcSetup(ledrChannel, freqPWM2, resolution);

  ledcAttachPin(ledv, ledvChannel);
  ledcAttachPin(leda, ledaChannel);
  ledcAttachPin(ledr, ledrChannel);
}
